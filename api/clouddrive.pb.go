// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/clouddrive.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// CloudDriveSetState indicates the state of the DriveSet
type CloudDriveSetState int32

const (
	// Initializing indicates that the DriveSet is attached to a node but still in
	// init state
	CloudDriveSetState_INITIALIZING CloudDriveSetState = 0
	// Attached indicates that the DriveSet is attached and in use by a node
	CloudDriveSetState_ATTACHED CloudDriveSetState = 1
	// Detached indicates that the DriveSet is detached and not used by any node
	CloudDriveSetState_DETACHED CloudDriveSetState = 2
	// PendingDelete indicates that the DriveSet needs to be deleted
	CloudDriveSetState_PENDING_DELETE CloudDriveSetState = 3
)

var CloudDriveSetState_name = map[int32]string{
	0: "INITIALIZING",
	1: "ATTACHED",
	2: "DETACHED",
	3: "PENDING_DELETE",
}
var CloudDriveSetState_value = map[string]int32{
	"INITIALIZING":   0,
	"ATTACHED":       1,
	"DETACHED":       2,
	"PENDING_DELETE": 3,
}

func (x CloudDriveSetState) String() string {
	return proto.EnumName(CloudDriveSetState_name, int32(x))
}
func (CloudDriveSetState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{0}
}

// Defines the operation types available to expand a drive set
type DriveSetExpandOperationType int32

const (
	// Automatically pick the optimum operation type
	DriveSetExpandOperationType_AUTO DriveSetExpandOperationType = 0
	// Add a new drive to expand the drive set
	DriveSetExpandOperationType_ADD DriveSetExpandOperationType = 1
	// Resize existing drives to expand the drive set
	DriveSetExpandOperationType_RESIZE DriveSetExpandOperationType = 2
)

var DriveSetExpandOperationType_name = map[int32]string{
	0: "AUTO",
	1: "ADD",
	2: "RESIZE",
}
var DriveSetExpandOperationType_value = map[string]int32{
	"AUTO":   0,
	"ADD":    1,
	"RESIZE": 2,
}

func (x DriveSetExpandOperationType) String() string {
	return proto.EnumName(DriveSetExpandOperationType_name, int32(x))
}
func (DriveSetExpandOperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{1}
}

// CloudDriveSet defines a set of storage  pools that could be attached on a node
type CloudDriveSet struct {
	// ID is the unique id of the cloud drive. This is managed by the storage provider
	// implementing the handlers
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Pools describes the configuration of the drives present in this set
	Pools []*StoragePool `protobuf:"bytes,2,rep,name=pools" json:"pools,omitempty"`
	// CreateTimestamp is the timestamp when the drive set was created
	CreateTimestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_timestamp,json=createTimestamp" json:"create_timestamp,omitempty"`
	// State state of the drive set from the well defined states
	State CloudDriveSetState `protobuf:"varint,4,opt,name=state,enum=openstorage.api.CloudDriveSetState" json:"state,omitempty"`
	// InstanceName is the name of the node  who is using the drive set
	InstanceName string `protobuf:"bytes,5,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	// InstanceID is the cloud provider id of the instance using this drive set
	InstanceId string `protobuf:"bytes,6,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	// Zone defines the zone in which the node exists
	Zone                 string   `protobuf:"bytes,7,opt,name=zone" json:"zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudDriveSet) Reset()         { *m = CloudDriveSet{} }
func (m *CloudDriveSet) String() string { return proto.CompactTextString(m) }
func (*CloudDriveSet) ProtoMessage()    {}
func (*CloudDriveSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{0}
}
func (m *CloudDriveSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudDriveSet.Unmarshal(m, b)
}
func (m *CloudDriveSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudDriveSet.Marshal(b, m, deterministic)
}
func (dst *CloudDriveSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudDriveSet.Merge(dst, src)
}
func (m *CloudDriveSet) XXX_Size() int {
	return xxx_messageInfo_CloudDriveSet.Size(m)
}
func (m *CloudDriveSet) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudDriveSet.DiscardUnknown(m)
}

var xxx_messageInfo_CloudDriveSet proto.InternalMessageInfo

func (m *CloudDriveSet) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CloudDriveSet) GetPools() []*StoragePool {
	if m != nil {
		return m.Pools
	}
	return nil
}

func (m *CloudDriveSet) GetCreateTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTimestamp
	}
	return nil
}

func (m *CloudDriveSet) GetState() CloudDriveSetState {
	if m != nil {
		return m.State
	}
	return CloudDriveSetState_INITIALIZING
}

func (m *CloudDriveSet) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *CloudDriveSet) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *CloudDriveSet) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

// Request to create the drive set
type SdkCloudDriveSetCreateRequest struct {
	// Specs are the list of specs for the cloud drives to create. For each item
	// in the list, a drive will be created and added to the CloudDriveSet
	Specs                []*CloudDriveSpec `protobuf:"bytes,1,rep,name=specs" json:"specs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkCloudDriveSetCreateRequest) Reset()         { *m = SdkCloudDriveSetCreateRequest{} }
func (m *SdkCloudDriveSetCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetCreateRequest) ProtoMessage()    {}
func (*SdkCloudDriveSetCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{1}
}
func (m *SdkCloudDriveSetCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetCreateRequest.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetCreateRequest.Merge(dst, src)
}
func (m *SdkCloudDriveSetCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetCreateRequest.Size(m)
}
func (m *SdkCloudDriveSetCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetCreateRequest proto.InternalMessageInfo

func (m *SdkCloudDriveSetCreateRequest) GetSpecs() []*CloudDriveSpec {
	if m != nil {
		return m.Specs
	}
	return nil
}

// CloudDriveSpec is a spec for a CloudDrive
type CloudDriveSpec struct {
	// Size is the required size of the CloudDrive
	Size int64 `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	// Type is the type of the CloudDrive
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// Options are other opaque key value pair options
	Options              map[string]string `protobuf:"bytes,3,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CloudDriveSpec) Reset()         { *m = CloudDriveSpec{} }
func (m *CloudDriveSpec) String() string { return proto.CompactTextString(m) }
func (*CloudDriveSpec) ProtoMessage()    {}
func (*CloudDriveSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{2}
}
func (m *CloudDriveSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudDriveSpec.Unmarshal(m, b)
}
func (m *CloudDriveSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudDriveSpec.Marshal(b, m, deterministic)
}
func (dst *CloudDriveSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudDriveSpec.Merge(dst, src)
}
func (m *CloudDriveSpec) XXX_Size() int {
	return xxx_messageInfo_CloudDriveSpec.Size(m)
}
func (m *CloudDriveSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudDriveSpec.DiscardUnknown(m)
}

var xxx_messageInfo_CloudDriveSpec proto.InternalMessageInfo

func (m *CloudDriveSpec) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *CloudDriveSpec) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CloudDriveSpec) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

// Defines a response with a list of cloud drives
type SdkCloudDriveSetCreateResponse struct {
	// CloudDriveSet that's created for this create request
	CloudDriveSet        *CloudDriveSet `protobuf:"bytes,1,opt,name=cloud_drive_set,json=cloudDriveSet" json:"cloud_drive_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SdkCloudDriveSetCreateResponse) Reset()         { *m = SdkCloudDriveSetCreateResponse{} }
func (m *SdkCloudDriveSetCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetCreateResponse) ProtoMessage()    {}
func (*SdkCloudDriveSetCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{3}
}
func (m *SdkCloudDriveSetCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetCreateResponse.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetCreateResponse.Merge(dst, src)
}
func (m *SdkCloudDriveSetCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetCreateResponse.Size(m)
}
func (m *SdkCloudDriveSetCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetCreateResponse proto.InternalMessageInfo

func (m *SdkCloudDriveSetCreateResponse) GetCloudDriveSet() *CloudDriveSet {
	if m != nil {
		return m.CloudDriveSet
	}
	return nil
}

// Empty request
type SdkCloudDriveSetEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudDriveSetEnumerateRequest) Reset()         { *m = SdkCloudDriveSetEnumerateRequest{} }
func (m *SdkCloudDriveSetEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetEnumerateRequest) ProtoMessage()    {}
func (*SdkCloudDriveSetEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{4}
}
func (m *SdkCloudDriveSetEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetEnumerateRequest.Merge(dst, src)
}
func (m *SdkCloudDriveSetEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetEnumerateRequest.Size(m)
}
func (m *SdkCloudDriveSetEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetEnumerateRequest proto.InternalMessageInfo

// Defines a response with a list of cloud drives
type SdkCloudDriveSetEnumerateResponse struct {
	// List of all the cloud drive sets in the cluster
	CloudDriveSets       []*CloudDriveSet `protobuf:"bytes,1,rep,name=cloud_drive_sets,json=cloudDriveSets" json:"cloud_drive_sets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SdkCloudDriveSetEnumerateResponse) Reset()         { *m = SdkCloudDriveSetEnumerateResponse{} }
func (m *SdkCloudDriveSetEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetEnumerateResponse) ProtoMessage()    {}
func (*SdkCloudDriveSetEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{5}
}
func (m *SdkCloudDriveSetEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetEnumerateResponse.Merge(dst, src)
}
func (m *SdkCloudDriveSetEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetEnumerateResponse.Size(m)
}
func (m *SdkCloudDriveSetEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetEnumerateResponse proto.InternalMessageInfo

func (m *SdkCloudDriveSetEnumerateResponse) GetCloudDriveSets() []*CloudDriveSet {
	if m != nil {
		return m.CloudDriveSets
	}
	return nil
}

// Defines a request object to inspect a cloud drive
type SdkCloudDriveSetInspectRequest struct {
	// ID of the cloud drive to inspect
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudDriveSetInspectRequest) Reset()         { *m = SdkCloudDriveSetInspectRequest{} }
func (m *SdkCloudDriveSetInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetInspectRequest) ProtoMessage()    {}
func (*SdkCloudDriveSetInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{6}
}
func (m *SdkCloudDriveSetInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetInspectRequest.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetInspectRequest.Merge(dst, src)
}
func (m *SdkCloudDriveSetInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetInspectRequest.Size(m)
}
func (m *SdkCloudDriveSetInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetInspectRequest proto.InternalMessageInfo

func (m *SdkCloudDriveSetInspectRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Defines a response for the inspect cloud drive operation
type SdkCloudDriveSetInspectResponse struct {
	// CloudDrive that was requested to inspect
	CloudDriveSet        *CloudDriveSet `protobuf:"bytes,1,opt,name=cloud_drive_set,json=cloudDriveSet" json:"cloud_drive_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SdkCloudDriveSetInspectResponse) Reset()         { *m = SdkCloudDriveSetInspectResponse{} }
func (m *SdkCloudDriveSetInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetInspectResponse) ProtoMessage()    {}
func (*SdkCloudDriveSetInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{7}
}
func (m *SdkCloudDriveSetInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetInspectResponse.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetInspectResponse.Merge(dst, src)
}
func (m *SdkCloudDriveSetInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetInspectResponse.Size(m)
}
func (m *SdkCloudDriveSetInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetInspectResponse proto.InternalMessageInfo

func (m *SdkCloudDriveSetInspectResponse) GetCloudDriveSet() *CloudDriveSet {
	if m != nil {
		return m.CloudDriveSet
	}
	return nil
}

// Defines a request object to delete a cloud drive
type SdkCloudDriveSetDeleteRequest struct {
	// ID of the cloud drive to delete
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudDriveSetDeleteRequest) Reset()         { *m = SdkCloudDriveSetDeleteRequest{} }
func (m *SdkCloudDriveSetDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetDeleteRequest) ProtoMessage()    {}
func (*SdkCloudDriveSetDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{8}
}
func (m *SdkCloudDriveSetDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetDeleteRequest.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetDeleteRequest.Merge(dst, src)
}
func (m *SdkCloudDriveSetDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetDeleteRequest.Size(m)
}
func (m *SdkCloudDriveSetDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetDeleteRequest proto.InternalMessageInfo

func (m *SdkCloudDriveSetDeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Empty response
type SdkCloudDriveSetDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudDriveSetDeleteResponse) Reset()         { *m = SdkCloudDriveSetDeleteResponse{} }
func (m *SdkCloudDriveSetDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetDeleteResponse) ProtoMessage()    {}
func (*SdkCloudDriveSetDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{9}
}
func (m *SdkCloudDriveSetDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetDeleteResponse.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetDeleteResponse.Merge(dst, src)
}
func (m *SdkCloudDriveSetDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetDeleteResponse.Size(m)
}
func (m *SdkCloudDriveSetDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetDeleteResponse proto.InternalMessageInfo

// Defines a request object to a cloud drive
type SdkCloudDriveSetAttachRequest struct {
	// ID of the cloud drive to attach
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// InstanceID of the node to attach the drive set
	InstanceId           string   `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudDriveSetAttachRequest) Reset()         { *m = SdkCloudDriveSetAttachRequest{} }
func (m *SdkCloudDriveSetAttachRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetAttachRequest) ProtoMessage()    {}
func (*SdkCloudDriveSetAttachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{10}
}
func (m *SdkCloudDriveSetAttachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetAttachRequest.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetAttachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetAttachRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetAttachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetAttachRequest.Merge(dst, src)
}
func (m *SdkCloudDriveSetAttachRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetAttachRequest.Size(m)
}
func (m *SdkCloudDriveSetAttachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetAttachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetAttachRequest proto.InternalMessageInfo

func (m *SdkCloudDriveSetAttachRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SdkCloudDriveSetAttachRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

// Defines a response for the attach cloud drive operation
type SdkCloudDriveSetAttachResponse struct {
	// AttachedDrives is the list of the drives that are attached
	AttachedDrives       []*AttachedCloudDrive `protobuf:"bytes,1,rep,name=attached_drives,json=attachedDrives" json:"attached_drives,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SdkCloudDriveSetAttachResponse) Reset()         { *m = SdkCloudDriveSetAttachResponse{} }
func (m *SdkCloudDriveSetAttachResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetAttachResponse) ProtoMessage()    {}
func (*SdkCloudDriveSetAttachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{11}
}
func (m *SdkCloudDriveSetAttachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetAttachResponse.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetAttachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetAttachResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetAttachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetAttachResponse.Merge(dst, src)
}
func (m *SdkCloudDriveSetAttachResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetAttachResponse.Size(m)
}
func (m *SdkCloudDriveSetAttachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetAttachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetAttachResponse proto.InternalMessageInfo

func (m *SdkCloudDriveSetAttachResponse) GetAttachedDrives() []*AttachedCloudDrive {
	if m != nil {
		return m.AttachedDrives
	}
	return nil
}

// CloudDriveAttachedDrive represents a single attached drive
type AttachedCloudDrive struct {
	// ID is the ID of the drive that's attached
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Path is the path where the drive is attached
	Path                 string   `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachedCloudDrive) Reset()         { *m = AttachedCloudDrive{} }
func (m *AttachedCloudDrive) String() string { return proto.CompactTextString(m) }
func (*AttachedCloudDrive) ProtoMessage()    {}
func (*AttachedCloudDrive) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{12}
}
func (m *AttachedCloudDrive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachedCloudDrive.Unmarshal(m, b)
}
func (m *AttachedCloudDrive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachedCloudDrive.Marshal(b, m, deterministic)
}
func (dst *AttachedCloudDrive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachedCloudDrive.Merge(dst, src)
}
func (m *AttachedCloudDrive) XXX_Size() int {
	return xxx_messageInfo_AttachedCloudDrive.Size(m)
}
func (m *AttachedCloudDrive) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachedCloudDrive.DiscardUnknown(m)
}

var xxx_messageInfo_AttachedCloudDrive proto.InternalMessageInfo

func (m *AttachedCloudDrive) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AttachedCloudDrive) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// Defines a request object to detach a cloud drive
type SdkCloudDriveSetDetachRequest struct {
	// ID of the cloud drive to detach
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudDriveSetDetachRequest) Reset()         { *m = SdkCloudDriveSetDetachRequest{} }
func (m *SdkCloudDriveSetDetachRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetDetachRequest) ProtoMessage()    {}
func (*SdkCloudDriveSetDetachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{13}
}
func (m *SdkCloudDriveSetDetachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetDetachRequest.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetDetachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetDetachRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetDetachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetDetachRequest.Merge(dst, src)
}
func (m *SdkCloudDriveSetDetachRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetDetachRequest.Size(m)
}
func (m *SdkCloudDriveSetDetachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetDetachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetDetachRequest proto.InternalMessageInfo

func (m *SdkCloudDriveSetDetachRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Empty response
type SdkCloudDriveSetDetachResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudDriveSetDetachResponse) Reset()         { *m = SdkCloudDriveSetDetachResponse{} }
func (m *SdkCloudDriveSetDetachResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetDetachResponse) ProtoMessage()    {}
func (*SdkCloudDriveSetDetachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{14}
}
func (m *SdkCloudDriveSetDetachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetDetachResponse.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetDetachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetDetachResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetDetachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetDetachResponse.Merge(dst, src)
}
func (m *SdkCloudDriveSetDetachResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetDetachResponse.Size(m)
}
func (m *SdkCloudDriveSetDetachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetDetachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetDetachResponse proto.InternalMessageInfo

// Defines a request object to expand a cloud drive
type SdkCloudDriveSetExpandRequest struct {
	// ID of the cloud drive set to expand
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// PoolID of the pool inside the cloud drive to expand
	PoolId string `protobuf:"bytes,2,opt,name=pool_id,json=poolId" json:"pool_id,omitempty"`
	// OperationType is the operation that's used to expand the drive set (optional)
	OperationType        DriveSetExpandOperationType `protobuf:"varint,3,opt,name=operation_type,json=operationType,enum=openstorage.api.DriveSetExpandOperationType" json:"operation_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SdkCloudDriveSetExpandRequest) Reset()         { *m = SdkCloudDriveSetExpandRequest{} }
func (m *SdkCloudDriveSetExpandRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetExpandRequest) ProtoMessage()    {}
func (*SdkCloudDriveSetExpandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{15}
}
func (m *SdkCloudDriveSetExpandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetExpandRequest.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetExpandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetExpandRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetExpandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetExpandRequest.Merge(dst, src)
}
func (m *SdkCloudDriveSetExpandRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetExpandRequest.Size(m)
}
func (m *SdkCloudDriveSetExpandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetExpandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetExpandRequest proto.InternalMessageInfo

func (m *SdkCloudDriveSetExpandRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SdkCloudDriveSetExpandRequest) GetPoolId() string {
	if m != nil {
		return m.PoolId
	}
	return ""
}

func (m *SdkCloudDriveSetExpandRequest) GetOperationType() DriveSetExpandOperationType {
	if m != nil {
		return m.OperationType
	}
	return DriveSetExpandOperationType_AUTO
}

// Defines a response for the inspect cloud drive operation
type SdkCloudDriveSetExpandResponse struct {
	// CloudDriveSet that was requested to expand
	CloudDriveSet        *CloudDriveSet `protobuf:"bytes,1,opt,name=cloud_drive_set,json=cloudDriveSet" json:"cloud_drive_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SdkCloudDriveSetExpandResponse) Reset()         { *m = SdkCloudDriveSetExpandResponse{} }
func (m *SdkCloudDriveSetExpandResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudDriveSetExpandResponse) ProtoMessage()    {}
func (*SdkCloudDriveSetExpandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_clouddrive_c61ef495f3758649, []int{16}
}
func (m *SdkCloudDriveSetExpandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudDriveSetExpandResponse.Unmarshal(m, b)
}
func (m *SdkCloudDriveSetExpandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudDriveSetExpandResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudDriveSetExpandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudDriveSetExpandResponse.Merge(dst, src)
}
func (m *SdkCloudDriveSetExpandResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudDriveSetExpandResponse.Size(m)
}
func (m *SdkCloudDriveSetExpandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudDriveSetExpandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudDriveSetExpandResponse proto.InternalMessageInfo

func (m *SdkCloudDriveSetExpandResponse) GetCloudDriveSet() *CloudDriveSet {
	if m != nil {
		return m.CloudDriveSet
	}
	return nil
}

func init() {
	proto.RegisterType((*CloudDriveSet)(nil), "openstorage.api.CloudDriveSet")
	proto.RegisterType((*SdkCloudDriveSetCreateRequest)(nil), "openstorage.api.SdkCloudDriveSetCreateRequest")
	proto.RegisterType((*CloudDriveSpec)(nil), "openstorage.api.CloudDriveSpec")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.CloudDriveSpec.OptionsEntry")
	proto.RegisterType((*SdkCloudDriveSetCreateResponse)(nil), "openstorage.api.SdkCloudDriveSetCreateResponse")
	proto.RegisterType((*SdkCloudDriveSetEnumerateRequest)(nil), "openstorage.api.SdkCloudDriveSetEnumerateRequest")
	proto.RegisterType((*SdkCloudDriveSetEnumerateResponse)(nil), "openstorage.api.SdkCloudDriveSetEnumerateResponse")
	proto.RegisterType((*SdkCloudDriveSetInspectRequest)(nil), "openstorage.api.SdkCloudDriveSetInspectRequest")
	proto.RegisterType((*SdkCloudDriveSetInspectResponse)(nil), "openstorage.api.SdkCloudDriveSetInspectResponse")
	proto.RegisterType((*SdkCloudDriveSetDeleteRequest)(nil), "openstorage.api.SdkCloudDriveSetDeleteRequest")
	proto.RegisterType((*SdkCloudDriveSetDeleteResponse)(nil), "openstorage.api.SdkCloudDriveSetDeleteResponse")
	proto.RegisterType((*SdkCloudDriveSetAttachRequest)(nil), "openstorage.api.SdkCloudDriveSetAttachRequest")
	proto.RegisterType((*SdkCloudDriveSetAttachResponse)(nil), "openstorage.api.SdkCloudDriveSetAttachResponse")
	proto.RegisterType((*AttachedCloudDrive)(nil), "openstorage.api.AttachedCloudDrive")
	proto.RegisterType((*SdkCloudDriveSetDetachRequest)(nil), "openstorage.api.SdkCloudDriveSetDetachRequest")
	proto.RegisterType((*SdkCloudDriveSetDetachResponse)(nil), "openstorage.api.SdkCloudDriveSetDetachResponse")
	proto.RegisterType((*SdkCloudDriveSetExpandRequest)(nil), "openstorage.api.SdkCloudDriveSetExpandRequest")
	proto.RegisterType((*SdkCloudDriveSetExpandResponse)(nil), "openstorage.api.SdkCloudDriveSetExpandResponse")
	proto.RegisterEnum("openstorage.api.CloudDriveSetState", CloudDriveSetState_name, CloudDriveSetState_value)
	proto.RegisterEnum("openstorage.api.DriveSetExpandOperationType", DriveSetExpandOperationType_name, DriveSetExpandOperationType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OpenStorageCloudDriveSet service

type OpenStorageCloudDriveSetClient interface {
	// Enumerate returns the ids of all the cloud drives in the current cluster
	Enumerate(ctx context.Context, in *SdkCloudDriveSetEnumerateRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetEnumerateResponse, error)
	// Create creates a new drive set
	Create(ctx context.Context, in *SdkCloudDriveSetCreateRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetCreateResponse, error)
	// Expand expands the given drive set
	Expand(ctx context.Context, in *SdkCloudDriveSetExpandRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetExpandResponse, error)
	// Delete deletes the given drive set
	Delete(ctx context.Context, in *SdkCloudDriveSetDeleteRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetDeleteResponse, error)
	// Delete inspects the given drive set
	Inspect(ctx context.Context, in *SdkCloudDriveSetInspectRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetInspectResponse, error)
	// Attach attaches all the drives in the given drive set to a single instance
	// provided in the request
	Attach(ctx context.Context, in *SdkCloudDriveSetAttachRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetAttachResponse, error)
	// Detach detaches all the drives in the given drive set from the instance
	// where it's currently attached
	Detach(ctx context.Context, in *SdkCloudDriveSetDetachRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetDetachResponse, error)
}

type openStorageCloudDriveSetClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageCloudDriveSetClient(cc *grpc.ClientConn) OpenStorageCloudDriveSetClient {
	return &openStorageCloudDriveSetClient{cc}
}

func (c *openStorageCloudDriveSetClient) Enumerate(ctx context.Context, in *SdkCloudDriveSetEnumerateRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetEnumerateResponse, error) {
	out := new(SdkCloudDriveSetEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudDriveSet/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudDriveSetClient) Create(ctx context.Context, in *SdkCloudDriveSetCreateRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetCreateResponse, error) {
	out := new(SdkCloudDriveSetCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudDriveSet/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudDriveSetClient) Expand(ctx context.Context, in *SdkCloudDriveSetExpandRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetExpandResponse, error) {
	out := new(SdkCloudDriveSetExpandResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudDriveSet/Expand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudDriveSetClient) Delete(ctx context.Context, in *SdkCloudDriveSetDeleteRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetDeleteResponse, error) {
	out := new(SdkCloudDriveSetDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudDriveSet/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudDriveSetClient) Inspect(ctx context.Context, in *SdkCloudDriveSetInspectRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetInspectResponse, error) {
	out := new(SdkCloudDriveSetInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudDriveSet/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudDriveSetClient) Attach(ctx context.Context, in *SdkCloudDriveSetAttachRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetAttachResponse, error) {
	out := new(SdkCloudDriveSetAttachResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudDriveSet/Attach", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudDriveSetClient) Detach(ctx context.Context, in *SdkCloudDriveSetDetachRequest, opts ...grpc.CallOption) (*SdkCloudDriveSetDetachResponse, error) {
	out := new(SdkCloudDriveSetDetachResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudDriveSet/Detach", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageCloudDriveSet service

type OpenStorageCloudDriveSetServer interface {
	// Enumerate returns the ids of all the cloud drives in the current cluster
	Enumerate(context.Context, *SdkCloudDriveSetEnumerateRequest) (*SdkCloudDriveSetEnumerateResponse, error)
	// Create creates a new drive set
	Create(context.Context, *SdkCloudDriveSetCreateRequest) (*SdkCloudDriveSetCreateResponse, error)
	// Expand expands the given drive set
	Expand(context.Context, *SdkCloudDriveSetExpandRequest) (*SdkCloudDriveSetExpandResponse, error)
	// Delete deletes the given drive set
	Delete(context.Context, *SdkCloudDriveSetDeleteRequest) (*SdkCloudDriveSetDeleteResponse, error)
	// Delete inspects the given drive set
	Inspect(context.Context, *SdkCloudDriveSetInspectRequest) (*SdkCloudDriveSetInspectResponse, error)
	// Attach attaches all the drives in the given drive set to a single instance
	// provided in the request
	Attach(context.Context, *SdkCloudDriveSetAttachRequest) (*SdkCloudDriveSetAttachResponse, error)
	// Detach detaches all the drives in the given drive set from the instance
	// where it's currently attached
	Detach(context.Context, *SdkCloudDriveSetDetachRequest) (*SdkCloudDriveSetDetachResponse, error)
}

func RegisterOpenStorageCloudDriveSetServer(s *grpc.Server, srv OpenStorageCloudDriveSetServer) {
	s.RegisterService(&_OpenStorageCloudDriveSet_serviceDesc, srv)
}

func _OpenStorageCloudDriveSet_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudDriveSetEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudDriveSetServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudDriveSet/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudDriveSetServer).Enumerate(ctx, req.(*SdkCloudDriveSetEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudDriveSet_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudDriveSetCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudDriveSetServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudDriveSet/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudDriveSetServer).Create(ctx, req.(*SdkCloudDriveSetCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudDriveSet_Expand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudDriveSetExpandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudDriveSetServer).Expand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudDriveSet/Expand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudDriveSetServer).Expand(ctx, req.(*SdkCloudDriveSetExpandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudDriveSet_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudDriveSetDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudDriveSetServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudDriveSet/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudDriveSetServer).Delete(ctx, req.(*SdkCloudDriveSetDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudDriveSet_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudDriveSetInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudDriveSetServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudDriveSet/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudDriveSetServer).Inspect(ctx, req.(*SdkCloudDriveSetInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudDriveSet_Attach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudDriveSetAttachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudDriveSetServer).Attach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudDriveSet/Attach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudDriveSetServer).Attach(ctx, req.(*SdkCloudDriveSetAttachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudDriveSet_Detach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudDriveSetDetachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudDriveSetServer).Detach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudDriveSet/Detach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudDriveSetServer).Detach(ctx, req.(*SdkCloudDriveSetDetachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageCloudDriveSet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageCloudDriveSet",
	HandlerType: (*OpenStorageCloudDriveSetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageCloudDriveSet_Enumerate_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _OpenStorageCloudDriveSet_Create_Handler,
		},
		{
			MethodName: "Expand",
			Handler:    _OpenStorageCloudDriveSet_Expand_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageCloudDriveSet_Delete_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageCloudDriveSet_Inspect_Handler,
		},
		{
			MethodName: "Attach",
			Handler:    _OpenStorageCloudDriveSet_Attach_Handler,
		},
		{
			MethodName: "Detach",
			Handler:    _OpenStorageCloudDriveSet_Detach_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/clouddrive.proto",
}

func init() { proto.RegisterFile("api/clouddrive.proto", fileDescriptor_clouddrive_c61ef495f3758649) }

var fileDescriptor_clouddrive_c61ef495f3758649 = []byte{
	// 972 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0x4d, 0x6e, 0xdb, 0x46,
	0x14, 0xc7, 0x43, 0xd2, 0x92, 0x92, 0x67, 0x4b, 0x62, 0xa7, 0x46, 0xc3, 0x32, 0x6e, 0xa4, 0x32,
	0x40, 0x61, 0x18, 0x05, 0x95, 0xa8, 0x28, 0x90, 0x1a, 0xdd, 0xa8, 0x16, 0x9b, 0x10, 0x30, 0x64,
	0x83, 0x52, 0xb3, 0xf0, 0x46, 0x60, 0xc4, 0xa9, 0x4d, 0x44, 0xe2, 0x4c, 0xc5, 0x91, 0x51, 0xa7,
	0xe8, 0xa6, 0x40, 0x51, 0xa0, 0x5d, 0x05, 0x5d, 0xf7, 0x0c, 0xbd, 0x40, 0x6f, 0xd1, 0x2b, 0xf4,
	0x18, 0x5d, 0x04, 0x33, 0x43, 0xda, 0x22, 0x29, 0x4b, 0x0c, 0x90, 0xdd, 0xcc, 0xf0, 0x7d, 0xfc,
	0xe6, 0xbd, 0xc7, 0x3f, 0x09, 0xbb, 0x3e, 0x0d, 0x3b, 0x93, 0x29, 0x59, 0x04, 0xc1, 0x3c, 0xbc,
	0xc4, 0x36, 0x9d, 0x13, 0x46, 0x50, 0x93, 0x50, 0x1c, 0xc5, 0x8c, 0xcc, 0xfd, 0x73, 0x6c, 0xfb,
	0x34, 0x34, 0x5b, 0xe7, 0x84, 0x9c, 0x4f, 0x71, 0x47, 0x3c, 0x7e, 0xb9, 0xf8, 0xbe, 0xc3, 0xc2,
	0x19, 0x8e, 0x99, 0x3f, 0xa3, 0xd2, 0xc3, 0xdc, 0x4b, 0x0c, 0x78, 0x38, 0x3f, 0x8a, 0x08, 0xf3,
	0x59, 0x48, 0xa2, 0x38, 0x79, 0x5a, 0x17, 0xc7, 0x34, 0x94, 0x5b, 0xeb, 0x6f, 0x15, 0xea, 0x47,
	0x3c, 0x67, 0x9f, 0xe7, 0x1c, 0x62, 0x86, 0x1a, 0xa0, 0x86, 0x81, 0xa1, 0xb4, 0x95, 0xfd, 0x7b,
	0x9e, 0x1a, 0x06, 0xa8, 0x0b, 0x15, 0x4a, 0xc8, 0x34, 0x36, 0xd4, 0xb6, 0xb6, 0xbf, 0xdd, 0xdd,
	0xb3, 0x73, 0x40, 0xf6, 0x50, 0xae, 0x4f, 0x09, 0x99, 0x7a, 0xd2, 0x14, 0x39, 0xa0, 0x4f, 0xe6,
	0xd8, 0x67, 0x78, 0x7c, 0x0d, 0x67, 0x68, 0x6d, 0x65, 0x7f, 0xbb, 0x6b, 0xda, 0x92, 0xce, 0x4e,
	0xf1, 0xed, 0x51, 0x6a, 0xe1, 0x35, 0xa5, 0xcf, 0xf5, 0x01, 0xfa, 0x0a, 0x2a, 0x31, 0xf3, 0x19,
	0x36, 0xb6, 0xda, 0xca, 0x7e, 0xa3, 0xfb, 0xa8, 0x90, 0x3a, 0x43, 0x3e, 0xe4, 0xa6, 0x9e, 0xf4,
	0x40, 0x8f, 0xa0, 0x1e, 0x46, 0x31, 0xf3, 0xa3, 0x09, 0x1e, 0x47, 0xfe, 0x0c, 0x1b, 0x15, 0x71,
	0xa1, 0x9d, 0xf4, 0x70, 0xe0, 0xcf, 0x30, 0x6a, 0xc1, 0xf6, 0xb5, 0x51, 0x18, 0x18, 0x55, 0x61,
	0x02, 0xe9, 0x91, 0x1b, 0x20, 0x04, 0x5b, 0xaf, 0x49, 0x84, 0x8d, 0x9a, 0x78, 0x22, 0xd6, 0xd6,
	0x0b, 0xf8, 0x64, 0x18, 0xbc, 0xca, 0x64, 0x3e, 0x12, 0xdc, 0x1e, 0xfe, 0x61, 0x81, 0x63, 0x86,
	0xbe, 0x84, 0x4a, 0x4c, 0xf1, 0x24, 0x36, 0x14, 0x51, 0xb0, 0xd6, 0x3a, 0x6a, 0x8a, 0x27, 0x9e,
	0xb4, 0xb6, 0xfe, 0x51, 0xa0, 0x91, 0x7d, 0xc2, 0xd3, 0xc7, 0xe1, 0x6b, 0x2c, 0x9a, 0xa1, 0x79,
	0x62, 0xcd, 0xcf, 0xd8, 0x15, 0xc5, 0x86, 0x2a, 0x91, 0xf8, 0x1a, 0x7d, 0x0b, 0x35, 0x42, 0x45,
	0x93, 0x0d, 0x4d, 0xe4, 0xfc, 0x7c, 0x43, 0x4e, 0xfb, 0x44, 0x9a, 0x3b, 0x11, 0x9b, 0x5f, 0x79,
	0xa9, 0xb3, 0x79, 0x08, 0x3b, 0xcb, 0x0f, 0x90, 0x0e, 0xda, 0x2b, 0x7c, 0x95, 0xcc, 0x02, 0x5f,
	0xa2, 0x5d, 0xa8, 0x5c, 0xfa, 0xd3, 0x45, 0x9a, 0x5e, 0x6e, 0x0e, 0xd5, 0xa7, 0x8a, 0x75, 0x01,
	0x0f, 0x6f, 0x2b, 0x4b, 0x4c, 0x49, 0x14, 0x73, 0xca, 0xa6, 0x98, 0xee, 0xb1, 0x18, 0xef, 0x71,
	0x8c, 0x99, 0x88, 0xbc, 0xdd, 0x7d, 0xb8, 0xbe, 0xaf, 0x5e, 0x7d, 0xb2, 0xbc, 0xb5, 0x2c, 0x68,
	0xe7, 0x33, 0x39, 0xd1, 0x62, 0x86, 0xe7, 0x37, 0x3d, 0xb0, 0x66, 0xf0, 0xe9, 0x1a, 0x9b, 0x04,
	0xe8, 0x39, 0xe8, 0x39, 0xa0, 0xb4, 0x67, 0x9b, 0x88, 0x1a, 0x19, 0xa2, 0xd8, 0x7a, 0x5c, 0xbc,
	0xbc, 0x1b, 0xf1, 0xb6, 0xb2, 0x74, 0x28, 0x72, 0x6f, 0x95, 0x15, 0x42, 0xeb, 0x56, 0x8f, 0xf7,
	0x5c, 0xaf, 0x4e, 0x71, 0x60, 0xfb, 0x78, 0x8a, 0x6f, 0x06, 0x36, 0xcf, 0xd6, 0x2e, 0xde, 0x26,
	0x75, 0x90, 0x68, 0xd6, 0x69, 0x31, 0x64, 0x8f, 0x31, 0x7f, 0x72, 0x71, 0x4b, 0xc8, 0xfc, 0x9b,
	0xa6, 0xe6, 0xdf, 0x34, 0x2b, 0x2a, 0xe6, 0x4c, 0x23, 0x26, 0xe5, 0x38, 0x86, 0xa6, 0x2f, 0x4e,
	0x70, 0x52, 0x91, 0xb4, 0x59, 0x45, 0x59, 0xe8, 0x25, 0x76, 0x37, 0xe1, 0xbc, 0x46, 0xea, 0x2b,
	0xb6, 0xb1, 0xf5, 0x14, 0x50, 0xd1, 0xaa, 0x80, 0x8d, 0x60, 0x8b, 0xfa, 0xec, 0x22, 0x7d, 0xd9,
	0xf8, 0x7a, 0x75, 0x39, 0xd7, 0xdc, 0x7d, 0x75, 0x39, 0x97, 0xaf, 0x66, 0xfd, 0xa5, 0x14, 0x63,
	0x3a, 0x3f, 0x52, 0x3f, 0x0a, 0x6e, 0xab, 0xe7, 0x7d, 0xa8, 0x71, 0xa5, 0xbd, 0xa9, 0x65, 0x95,
	0x6f, 0xdd, 0x00, 0x0d, 0xa1, 0x41, 0x28, 0x1f, 0xf3, 0x90, 0x44, 0x63, 0x21, 0x14, 0x9a, 0xd0,
	0xce, 0xa2, 0x22, 0x64, 0x13, 0x9d, 0xa4, 0x4e, 0xa3, 0x2b, 0x8a, 0xbd, 0x3a, 0x59, 0xde, 0xae,
	0x7a, 0xb7, 0x53, 0xbc, 0xf7, 0x3b, 0xab, 0x07, 0x2f, 0x00, 0x15, 0x35, 0x1d, 0xe9, 0xb0, 0xe3,
	0x0e, 0xdc, 0x91, 0xdb, 0x3b, 0x76, 0xcf, 0xdc, 0xc1, 0x33, 0xfd, 0x0e, 0xda, 0x81, 0xbb, 0xbd,
	0xd1, 0xa8, 0x77, 0xf4, 0xdc, 0xe9, 0xeb, 0x0a, 0xdf, 0xf5, 0x9d, 0x64, 0xa7, 0x22, 0x04, 0x8d,
	0x53, 0x67, 0xd0, 0x77, 0x07, 0xcf, 0xc6, 0x7d, 0xe7, 0xd8, 0x19, 0x39, 0xba, 0x76, 0xf0, 0x35,
	0x3c, 0x58, 0x73, 0x5f, 0x74, 0x17, 0xb6, 0x7a, 0xdf, 0x8d, 0x4e, 0xf4, 0x3b, 0xa8, 0x06, 0x5a,
	0xaf, 0xcf, 0x63, 0x02, 0x54, 0x3d, 0x67, 0xe8, 0x9e, 0x39, 0xba, 0xda, 0xfd, 0xbf, 0x06, 0xc6,
	0x09, 0xc5, 0x51, 0xf2, 0xa5, 0xcb, 0x7e, 0x2f, 0xff, 0x50, 0xe0, 0xde, 0xb5, 0xb6, 0xa0, 0x27,
	0xc5, 0xcf, 0xe3, 0x06, 0xad, 0x32, 0xbb, 0xef, 0xe2, 0x92, 0x4c, 0xcc, 0xfd, 0x5f, 0xfe, 0xfd,
	0xef, 0x4f, 0xf5, 0x03, 0xd4, 0xec, 0x5c, 0x3e, 0x59, 0xfa, 0x67, 0x88, 0xd1, 0xaf, 0x0a, 0x54,
	0xa5, 0xee, 0x22, 0x7b, 0x63, 0xdc, 0xcc, 0x77, 0xcb, 0xec, 0x94, 0xb6, 0x4f, 0x20, 0x4c, 0x01,
	0xb1, 0x6b, 0xe5, 0x21, 0x0e, 0x95, 0x03, 0xf4, 0xbb, 0x02, 0x55, 0x59, 0xe9, 0x12, 0x1c, 0x99,
	0x59, 0x2f, 0xc1, 0x91, 0x1d, 0x3e, 0xab, 0x25, 0x38, 0x3e, 0x36, 0x77, 0x73, 0x1c, 0x9d, 0x9f,
	0xc2, 0xe0, 0x67, 0x0e, 0xf3, 0x9b, 0x02, 0x55, 0xa9, 0x60, 0x25, 0x60, 0x32, 0xda, 0x58, 0x02,
	0x26, 0x27, 0x8d, 0x7b, 0x02, 0xe6, 0xa3, 0x83, 0x95, 0x30, 0xbc, 0x2c, 0xb5, 0x44, 0xe7, 0xd1,
	0xe6, 0xd0, 0xd9, 0x6f, 0x88, 0xf9, 0xb8, 0xbc, 0x43, 0x16, 0x06, 0xad, 0x86, 0x79, 0xa3, 0x40,
	0x55, 0x8a, 0x60, 0x89, 0xb2, 0x64, 0xf4, 0xbd, 0x44, 0x59, 0xb2, 0xea, 0x6d, 0x7d, 0x26, 0x48,
	0xda, 0xd6, 0x83, 0x55, 0x24, 0x1d, 0x29, 0xce, 0xbc, 0x55, 0x6f, 0x44, 0xab, 0x4a, 0x32, 0x65,
	0x74, 0xb7, 0x54, 0xab, 0xde, 0x81, 0x29, 0xc0, 0x09, 0xd3, 0x37, 0x7b, 0xf0, 0xe1, 0x84, 0xcc,
	0xf2, 0xd1, 0x4f, 0x95, 0x33, 0xcd, 0xa7, 0xe1, 0xcb, 0xaa, 0xf8, 0x93, 0xfd, 0xe2, 0x6d, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xbd, 0x3d, 0x12, 0x9b, 0xbf, 0x0b, 0x00, 0x00,
}
